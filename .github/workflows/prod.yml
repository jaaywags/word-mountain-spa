name: Deploy to Prod

# Manual deployment
on: workflow_dispatch

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.twistedqueue.com/word-mountain-spa/prod
          tags: |
            type=raw,value=${{ github.sha }}
          labels: |
            logging=react-spa

      - name: Setup Environment Variables
        run: echo "${{ secrets.PROD_ENVIRONMENT_FILE }}" > ./environments/environment.prod.json

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate with Docker Registry
        uses: docker/login-action@v3
        with:
          registry: docker.twistedqueue.com
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./Dockerfile.prod
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup SSH Keys and known_hosts
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa ${{ secrets.FTP_HOST }} >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.FTP_PRIVATE_KEY }}"
      - name: Deploy to prod
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_HOST }} << EOF
            docker stop WordMountainSpa-Prod
            docker rm WordMountainSpa-Prod
            docker login docker.twistedqueue.com -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker run -d -p ${{secrets.DOCKER_PROD_PORT}}:3000 --restart always --name WordMountainSpa-Prod docker.twistedqueue.com/word-mountain-spa/prod:${{ github.sha }}
          EOF
      - name: Cloudflare Purge Cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
